name: Random PR Reviewers

on:
  pull_request:
    types: [opened, reopened, ready_for_review]

jobs:
  assign-reviewers:
    runs-on: ubuntu-latest
    steps:
      - name: Assign random reviewers and notify Slack
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const GEMINI_BOT = 'gemini-bot'; // 제외할 계정
            const slackWebhook = process.env.SLACK_WEBHOOK_URL;

            // GitHub 관련 함수
            async function getPRInfo(prNumber) {
              return context.payload.pull_request;
            }

            async function getValidReviewers(prAuthor) {
              const collaborators = await github.rest.repos.listCollaborators({
                owner: context.repo.owner,
                repo: context.repo.repo
              });
              return collaborators.data
                .map(c => c.login)
                .filter(u => u !== prAuthor && u !== GEMINI_BOT);
            }

            async function assignReviewers(prNumber, reviewers) {
              await github.rest.pulls.requestReviewers({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber,
                reviewers
              });
              console.log(`Reviewers assigned: ${reviewers.join(', ')}`);
            }

            // 유틸 함수
            function selectRandomTwo(array) {
              const copy = [...array];
              const first = copy.splice(Math.floor(Math.random() * copy.length), 1)[0];
              const second = copy.splice(Math.floor(Math.random() * copy.length), 1)[0];
              return [first, second];
            }

            async function sendSlackMessage(reviewers, prNumber) {
              if (!slackWebhook) return;
              const payload = {
                text: `:robot_face: You have been selected as a reviewer for PR #${prNumber}: ${reviewers.join(', ')}`
              };
              await fetch(slackWebhook, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(payload)
              });
            }

            // 메인
            async function main() {
              const prInfo = await getPRInfo();
              const prNumber = prInfo.number;
              const prAuthor = prInfo.user.login;

              const validReviewers = await getValidReviewers(prAuthor);
              if (validReviewers.length < 2) {
                console.log('Not enough reviewers available.');
                return;
              }

              const reviewers = selectRandomTwo(validReviewers);

              await assignReviewers(prNumber, reviewers);
              await sendSlackMessage(reviewers, prNumber);
            }

            main().catch(err => {
              console.error(err);
              process.exit(1);
            });